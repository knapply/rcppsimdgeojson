// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// hello
bool hello();
RcppExport SEXP _rcppsimdgeojson_hello() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(hello());
    return rcpp_result_gen;
END_RCPP
}
// parse_geojson
SEXP parse_geojson(const Rcpp::CharacterVector& x, const bool on_demand);
RcppExport SEXP _rcppsimdgeojson_parse_geojson(SEXP xSEXP, SEXP on_demandSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::CharacterVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const bool >::type on_demand(on_demandSEXP);
    rcpp_result_gen = Rcpp::wrap(parse_geojson(x, on_demand));
    return rcpp_result_gen;
END_RCPP
}
// read_geojson
SEXP read_geojson(const Rcpp::CharacterVector& x);
RcppExport SEXP _rcppsimdgeojson_read_geojson(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::CharacterVector& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(read_geojson(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rcppsimdgeojson_hello", (DL_FUNC) &_rcppsimdgeojson_hello, 0},
    {"_rcppsimdgeojson_parse_geojson", (DL_FUNC) &_rcppsimdgeojson_parse_geojson, 2},
    {"_rcppsimdgeojson_read_geojson", (DL_FUNC) &_rcppsimdgeojson_read_geojson, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_rcppsimdgeojson(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
